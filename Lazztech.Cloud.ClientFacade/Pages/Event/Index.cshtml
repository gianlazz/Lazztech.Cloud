@page
@model Lazztech.Cloud.ClientFacade.Pages.Event.IndexModel
@{
    Layout = "/Pages/Shared/Minton/_Layout_HackathonHandler.cshtml";
}
@{
    ViewData["Title"] = "Index";
}

<div class="background-container">
    <div class="jumbotron">
        <h1>@Model.Organization.Name</h1>
        <h1>Mentors On The @Model.Event.Name Premise</h1>
        <p class="lead">Browse through the selection of on premise mentors. If they're available you can request their assistance; doing so will send the mentor an sms message alerting them to come meet up with you.</p>
        <p class="lead">If the mentor accepts the request to help their card will be greyed out until they are finished.</p>
    </div>
    @if (Model.Message != null)
    {
        <div class="alert alert-success" role="alert">
            @Model.Message
        </div>
    }
    else if (Model.Alert != null)
    {
        <div class="alert alert-danger" role="alert">
            @Model.Alert
        </div>
    }
    <h2>Present Mentors</h2>
    <hr />
    <div class="row">
        @for (int i = 0; i < Model.Mentors.Count; i++)
        {
            if (i > 0 && i % 3 == 0)
            {

            @:</div><br /><div class="row">
                // close and start new row
            }
            <div class="col-md-4 col-sm-1">
                <div class="card">
                    <!--         <img class="card-img-top" src="@Model.Mentors[i].Image" alt="Card image cap"> -->
                    @if (Model.Mentors[i].Image != null)
                    {
                        <img class="card-img-top" src="@Model.Mentors[i].Image" alt="Card image cap">
                    }
                    else
                    {
                        <img class="card-img-top" src="~/Content/blank-profile-picture.png" alt="Card image cap">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@Model.Mentors[i].FirstName</h5>
                        <p>@Model.Mentors[i].ProfessionalTitle</p>
                        <p class="card-text">Interests: @Model.Mentors[i].Description</p>
                        <button type="button" class="@(Model.Mentors[i].IsAvailable ? "btn btn-primary" : "btn btn-outline-secondary")" data-toggle="modal" data-target="@(Model.Mentors[i].IsAvailable ? "#"+Model.Mentors[i].MentorId.ToString() : "")">
                            @(Model.Mentors[i].IsAvailable ? "Request Their Assistance" : "Currently Unavailable")
                        </button>
                    </div>
                </div>
                <br />
            </div>
        }
    </div>
    <br />
</div>
<!-- MODALS -->
@foreach (var mentor in Model.Mentors)
{
    <div class="modal fade" id="@mentor.MentorId.ToString()" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            @using (Html.BeginForm("MentorRequest", "Event"))
            {
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Enter your details to help @mentor.FirstName find you</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                @Html.Hidden("uniqueRequesteeId", Model.UniqueRequesteeId)
                                @Html.TextBox("teamName", null, htmlAttributes: new { @class = "form-control", @placeholder = "Team name", @type = "text" })
                                <br />
                                @Html.TextBox("teamLocation", null, htmlAttributes: new { @class = "form-control", @placeholder = "Description of where you're sitting", @type = "text" })
                                @Html.Hidden("mentorId", mentor.MentorId)
                                <br />
                                <small id="emailHelp" class="form-text text-muted">After selecting submit your mentor will be notified and come to help out.</small>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button class="btn btn-primary" type="submit" value="#teamPin" id="btnSubmit">Submit</button>
                    </div>
                </div>
            }
        </div>
    </div>
}